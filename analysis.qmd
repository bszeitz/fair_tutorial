---
title: "analysis"
editor: visual
---

First, we add a chunk that loads the libraries:

```{r}
#| output: false
library(babynames)
library(knitr)
library(dplyr)
library(ggplot2)
```


To plot the first 10 lines of the babynames table you can add:


```{r}
head(babynames) |> kable()
```


Here, Iâ€™ve created two functions that do the following:

- get_most_frequent: Gets the most frequent babynames over a time-period.
- plot_top: from the output of get_most_frequent. Plot the top n most popular names.


```{r }
#| code-fold: true
get_most_frequent <- function(babynames, select_sex, from = 1950) {
  most_freq <- babynames |>
    filter(sex == select_sex, year > from) |>
    group_by(name) |>
    summarise(average = mean(prop)) |>
    arrange(desc(average))
  return(most_freq)
}

plot_top <- function(x, babynames, select_sex, top = 10, from = 1950) {
  topx <- x$name[1:top]
  
  p <- babynames |>
    filter(name %in% topx, sex == select_sex, year > from) |>
    ggplot(aes(x = year, y = prop, color = name)) +
    geom_line() +
    scale_color_brewer(palette = "Paired") +
    theme_classic()
  
  return(p)
}

```

Plotting them for @fig-girls and then for @fig-boys:


```{r }
#| label: fig-girls
get_most_frequent(babynames, select_sex = "F") |>
  plot_top(babynames, select_sex = "F", top = 10)
```


```{r }
#| label: fig-boys
get_most_frequent(babynames, select_sex = "M") |>
  plot_top(babynames, select_sex = "M", top = 10)
```



